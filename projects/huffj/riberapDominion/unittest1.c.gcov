        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/************************************************************
        -:    2:*
        -:    3:* unittest1.c
        -:    4:*
        -:    5:* -----------------
        -:    6:* Josh Huff 
        -:    7:* huffj@oregonstate.edu
        -:    8:* CS362 -- Spring 2018
        -:    9:* Assignment 5 
        -:   10:* -----------------
        -:   11:*
        -:   12:* Unit Test for isGameOver() in dominion.c
        -:   13:*
        -:   14:*************************************************************/
        -:   15:#include <stdio.h>
        -:   16:#include <stdlib.h>
        -:   17:#include <string.h>
        -:   18:#include <assert.h>
        -:   19:#include <math.h>
        -:   20:#include "dominion.h"
        -:   21:#include "dominion_helpers.h"
        -:   22:#include "interface.h"
        -:   23:#include "rngs.h"
        -:   24:
function testIsGameOver called 1 returned 100% blocks executed 100%
        1:   25:void testIsGameOver() {
        -:   26:
        1:   27:  int k[10] = {adventurer, feast, baron, mine, great_hall, 
        -:   28:               remodel, smithy, village, ambassador, embargo};
        -:   29:            
        1:   30:  int players = 2;
        1:   31:  int seed = 1000;
        -:   32:  struct gameState state; 
        -:   33:
        1:   34:  memset(&state, 23, sizeof(struct gameState));
        1:   35:  initializeGame(players, k, seed, &state);
call    0 returned 100%
        -:   36:  
        1:   37:  printf("TESTING isGameOver():\n");
call    0 returned 100%
        -:   38:
        -:   39:// Test 1 -- Game continues (returns false) if there are Province cards and no more than two piles are exhausted.
        1:   40:  printf("Test: Province cards available and two supply piles exhausted.\n");
call    0 returned 100%
        -:   41:
        -:   42:  // Card-Drawing Strategy -- a player has combo'ed off the Smithy and Village cards
        1:   43:  state.supplyCount[province] = 1;
        1:   44:  state.supplyCount[smithy] = 0;
        1:   45:  state.supplyCount[village] = 0;
        -:   46:
        1:   47:  asserttrue(isGameOver(&state), 0);
call    0 returned 100%
call    1 returned 100%
        -:   48:
        -:   49:// Test 2 -- Game halts (returns true) if there are no more Province cards.
        1:   50:  printf("Test: No Province cards.\n");
call    0 returned 100%
        -:   51:
        1:   52:  state.supplyCount[province] = 0;
        -:   53:  
        1:   54:  asserttrue(isGameOver(&state), 1);
call    0 returned 100%
call    1 returned 100%
        -:   55:      
        -:   56:// Test 3 -- Game halts (returns true) if there are four or fewer players and more than two piles exhausted.
        1:   57:  printf("Test: Three supply piles exhausted.\n");
call    0 returned 100%
        -:   58:
        -:   59:  // Card-Drawing Strategy -- a player has combo'ed off the Smithy and Village cards
        1:   60:  state.supplyCount[province] = 1;
        1:   61:  state.supplyCount[feast] = 0;
        1:   62:  state.supplyCount[smithy] = 0;
        1:   63:  state.supplyCount[village] = 0;  
        -:   64:
        1:   65:  asserttrue(isGameOver(&state), 1);
call    0 returned 100%
call    1 returned 100%
        -:   66:
        1:   67:}
        -:   68:
function main called 1 returned 100% blocks executed 100%
        1:   69:int main(int argc, char *argv[]){
        -:   70:  
        1:   71:  testIsGameOver();
call    0 returned 100%
        1:   72:  return 0;
        -:   73:}
